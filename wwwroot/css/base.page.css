/**
 * Document
 *
 * 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
 * 2. Disable stylelint rule as border-box performance impact isn't significant when using the universal selector - https://www.paulirish.com/2012/box-sizing-border-box-ftw/#content
 *
 */

/* stylelint-disable selector-max-universal */
*,
*::before,
*::after {
    box-sizing: border-box; /* 1 */ /* 2 */
}
/* stylelint-enable selector-max-universal */

/**
 * HTML
 *
 * 1. Force scrollbars to always be visible to prevent awkward page jumps when navigating between pages that do/do not have enough content to produce scrollbars naturally - http://css-tricks.com/eliminate-jumps-in-horizontal-centering-by-forcing-a-scroll-bar/
 * 2. The `box-shadow` from the window component causes the page to look off-centered. If the browser supports `box-shadow` adjust the html element to make the layout appear more aligned and centered.
 *
 */

html {
    overflow-y: scroll; /* 1 */
}

@supports (box-shadow: none) {
    html {
        position: relative; /* 2 */
        left: -0.25em; /* 2 */
    }
}

@media (prefers-reduced-motion: no-preference) {
    html {
        scroll-behavior: smooth;
    }
}

/**
 * Body
 *
 * 1. Fallback for browsers that don't support Custom Properties: https://caniuse.com/#search=Custom%20Properties
 *
 */

body {
    background-color: #fff; /* 1 */
    background-color: rgba(var(--palette-neutral-0), 1);
    background-image: repeating-linear-gradient(-45deg, rgba(28,28,28, 0.25), rgba(28, 28, 28, 0.25) 1px, transparent 1px, transparent 6px); /* 3 */
    background-image: repeating-linear-gradient(-45deg, rgba(var(--palette-neutral-90), 0.25), rgba(var(--palette-neutral-90), 0.25) 1px, transparent 1px, transparent 6px); /* texture patterns - https://codepen.io/bitmap/pen/jfKxm */
    background-size: 4px 4px;
    margin: 0;
}


@media (prefers-color-scheme: TODO-dark) {
    body {
        background-color: rgba(var(--palette-neutral-100), 1);
        background-image: repeating-linear-gradient(-45deg, rgba(var(--palette-neutral-0), 0.5), rgba(var(--palette-neutral-0), 0.5) 1px, transparent 1px, transparent 6px);
    }
}

/**
 * Support: Accessibility (A11y)
 * Details: WCAG 2.4.7 Focus Visible: Any keyboard operable user interface has a mode of operation where the keyboard focus indicator is visible. (Level AA)
 * Supporting Details: https://www.w3.org/TR/2008/REC-WCAG20-20081211/#navigation-mechanisms-focus-visible
 * Additional Details: http://www.outlinenone.com
 * Additional Details: https://www.deque.com/blog/give-site-focus-tips-designing-usable-focus-indicators/
 *
 * Support: IE11 - https://github.com/06b/adriandalvarez.com/issues/18
 * Details: According to Focusable Elements - Browser Compatibility Table by ally.js the <html> & <body> elements are tabbable (keyboard focusable) for IE.
 *          Also while the <html> element itself is not considered focusable, but some browsers may give it focus when focus is passed from browser UI to the document.
 * Supporting Details: https://allyjs.io/data-tables/focusable.html
 *
 * Additional Details: It seems that someone else ran into this same issue 
 *
 * " :focus on IE11 Win 8.1 seems to add focus styles on any clicked div. :/"  <https://twitter.com/James_M_South/status/575824911207395328> 
 *
 * This seems to still be the case with this issue, where the previous fix of "applying `:focus` to styles on child elements of the <body> rather than globally to all
 * document elements which would include <html> & <body>." Fixes the issue of :focus styles on load, it does appear to have the issue where clicking certain sections
 * of the site will apply :focus. 
 *
 * By chance, I stumble upon the U.S. Web Design System (USWDS) and noticed they were listing focusable elements instead of applying a global `*:focus` and 
 * included the comment of "Apply :focus behavior to focusable elements only (For IE 11)."
 *
 * Fix: Apply the :focus to focusable elements only.
 *
 */

 input:not([disabled]):focus, 
 select:not([disabled]):focus, 
 textarea:not([disabled]):focus, 
 button:not([disabled]):focus,
 iframe:focus,
 [href]:focus,
 [tabindex]:focus, 
 [contentEditable="true"]:focus  {
    outline: 2px dashed currentColor;
}
