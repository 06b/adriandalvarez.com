<!DOCTYPE html>
@* <!--
    Support: Accessibility (A11y)
    Details: <html> element must have a lang attribute.
    Supporting Details: https://webhint.io/docs/user-guide/hints/hint-axe/language/
    Additional Details: Difference between lang="en" and lang="en-US" https://stackoverflow.com/questions/11318961/what-is-the-difference-between-html-lang-en-and-html-lang-en-us#11319263
    Fix: Add a lang attribute to the html element (e.g. <html lang="en">) whose value represents the primary language of document.
--> *@
<html lang="en" dir="ltr" class="no-js" prefix="og:http://ogp.me/ns#">
<head>
    @*<!--
        Support: Compatibility
        Details: To consistently ensure proper document rendering, every HTML page should explicity declare the character encoding.
        Supporting Details: https://webhint.io/docs/user-guide/hints/hint-meta-charset-utf-8/
        Fix: Set character encoding for the document to utf-8.
    -->*@
    <meta charset="utf-8" />
    @*<!--
        Support: Compatibility
        Details: The viewport meta tag is an essential part of responsive web design, that may also offer some performance improvements.
        Supporting Details: https://webhint.io/docs/user-guide/hints/hint-meta-viewport/
        Fix: Set the viewport to include `width=device-width` & `initial-scale=1` (Safari for iOS < 9)
    --> *@
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    @*<!--
        Support: Security (Event 1058 - Codepage Sniffing) & Compatibility
        Details: The above 2 meta tags *must* come first in the <head> to consistently ensure proper document rendering.
                 Any other head element should come *after* these tags.
        Supporting Details: https://github.com/joshbuchea/HEAD#recommended-minimum
        Additional Details: 1). https://webhint.io/docs/user-guide/hints/hint-meta-charset-utf-8/#why-is-this-important
                            2). https://html.spec.whatwg.org/multipage/semantics.html#charset
        Note: In Additional Details #2 - the UTF-8 character encoding declaration must be serialized completely
              within the first 1024 bytes of the document as some browsers only look at those bytes before choosing
              an encoding. By being the first thing in the <head>, this ensures it is before any content that could
              be controlled by an attacker, such as a <title> element, thus avoiding potential encoding-related
              security issues; such as the one in old IE:
              https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/dd565635(v=vs.85).
        --> *@
    <title>@ViewData["Title"] - Adrian D. Alvarez</title>
    <meta content="@ViewData["Title"] - Adrian D. Alvarez" name="twitter:title" property="og:title">
    <meta content="Adrian D. Alvarez" name="author">

    <!--[if lt IE 9]>
        <script src="/js/html5shiv.min.js"></script>
    <![endif]-->

    <environment include="Development">
        <!-- tools.*.css will only appear in Development. -->
            <!-- Helps visually detect any potentially invalid, inaccessible or erroneous HTML markup -->
                @* <link href="~/css/tools.a11y-en.css" rel="stylesheet" />
                <link href="~/css/tools.diagnosticss.css" rel="stylesheet" />
                <link href="~/css/tools.revenge.css" rel="stylesheet" /> *@
        <!-- /end tools.*.css will only appear in Development. -->

        <link href="~/css/tokens.css" rel="stylesheet" />
        <link href="~/css/base.fonts.css" rel="stylesheet" />
        <link href="~/css/base.page.css" rel="stylesheet" />
        <link href="~/css/elements.typography.css" rel="stylesheet" />
        <link href="~/css/elements.links.css" rel="stylesheet" />
        <link href="~/css/elements.interactive.css" rel="stylesheet" />
        <link href="~/css/elements.images.css" rel="stylesheet" />
        <link href="~/css/components.window.css" rel="stylesheet" />
        <link href="~/css/components.navigation.css" rel="stylesheet" />
        <link href="~/css/components.portrait.css" rel="stylesheet" />
        <link href="~/css/utilities.headings.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <!-- TODO: Create Production Build of css -->
        <link href="~/css/tokens.css" rel="stylesheet" />
        <link href="~/css/base.fonts.css" rel="stylesheet" />
        <link href="~/css/base.page.css" rel="stylesheet" />
        <link href="~/css/elements.typography.css" rel="stylesheet" />
        <link href="~/css/elements.links.css" rel="stylesheet" />
        <link href="~/css/elements.interactive.css" rel="stylesheet" />
        <link href="~/css/elements.images.css" rel="stylesheet" />
        <link href="~/css/components.window.css" rel="stylesheet" />
        <link href="~/css/components.navigation.css" rel="stylesheet" />
        <link href="~/css/components.portrait.css" rel="stylesheet" />
        <link href="~/css/utilities.headings.css" rel="stylesheet" />
    </environment>

    @*<!--
        Support: FOUC - Remove `no-js` class.
        Details: Allows you to know, in your CSS, whether or not JavaScript is enabled.
        Supporting Details: https://www.paulirish.com/2009/avoiding-the-fouc-v3/
        Fix: Scripts in the body block rendering, so scripts should be kept near </body> however this
            one script is small enough to be an exception; to modify the class on the <html> element
            while in the <head> element as it will have access to it while in the <head> which should
            reduce FOUC.
    -->*@
   <environment include="Development">
    <script>
        document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/,"js");
    </script>
    </environment>
    <environment exclude="Development">
    <script>
        !function (e) { e.className = e.className.replace(/\bno-js\b/, "js") }(document.documentElement);
    </script>
    </environment>

    <partial name="_Favicons" />

    @{
        // Canonical should update per url - for example - /about or /blog/post/abc
        string CanonicalURL = Context.Request.Path;
        string Domain = String.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host);
        CanonicalURL = Domain + CanonicalURL.ToLowerInvariant();
    }
    <link href="@CanonicalURL" rel="canonical">
    <meta content="@CanonicalURL" property="og:url">
    <meta content="@CanonicalURL" property="twitter:url">
    <meta content="website" property="og:type">
    <meta content="summary" name="twitter:card">

    <meta content="@Domain/android-chrome-256x256.png" name="twitter:image" property="og:image">
    <meta content="256" property="og:image:width">
    <meta content="256" property="og:image:height">
    <meta content="Portrait of Adrian D. Alvarez" property="og:image:alt">

    @RenderSection("headblock", required: false)

    @*<!--
        Support: Privacy - Twitter
        Details: If a site embeds tweets - prevent Twitter from tracking your visitors
        Supporting Details: https://twitter.com/bcrypt/status/903724091143630848
    -->*@
    <meta content="on" name="twitter:dnt">

</head>
<body id="adriandalvarez-com">

    <details class="window" open>
        <!-- TODO: Remove tabindex with javascript when viewport is wide enough that it makes sense to allow for the toggling of the navigation & browser supports `details` -->
        <summary id="navigation-heading" class="window__title" tabindex="-1">Site
            <!-- TODO: Test in screen readers.
            Hide the word "navigation" from screen readers to avoid redundant announcing of `navigation`
            https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Navigation_Role#Redundant_descriptions
            -->
            <span aria-hidden="true">Navigation</span>
        </summary>
        <!-- using `aria-labelledby` instead of `aria-label` http://www.heydonworks.com/article/aria-label-is-a-xenophobe -->
        <nav aria-labelledby="navigation-heading" role="navigation">
            @{
                string path = Context.Request.Path;
                path = path.ToLowerInvariant();

                bool home = (path == "/" || path == "/index" || path == "/index/");
                string currentPage = "aria-current=page";
            }
            <ul class="window__body window__body--dark">
                <li>
                    <a href="/" @{ if (home) { @currentPage }}>Home</a>
                </li>
                <li>
                    <a href="/portfolio" @{ if (path.Contains("portfolio")) { @currentPage }}>Portfolio</a>
                </li>
                <li>
                    <a href="/hypertext/log" @{ if (path.Contains("hypertext")) { @currentPage }}>HyperText Log</a>
                </li>
            </ul>
        </nav>
    </details>

    <div class="window portrait">
        <div class="window__title">
            <svg aria-hidden="true" focusable="false" role="presentation" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24" height="24">
                <g fill="none" fill-rule="evenodd" stroke="none" stroke-width="1">
                    <g id="ic_fluent_test_call_24_regular" fill="currentColor" fill-rule="nonzero">
                        <path d="M18.01 12.245l.504-1.187c.236-.557.801-.86 1.356-.744l.118.031.63.202c.626.2 1.104.735 1.259 1.407.367 1.598-.074 3.543-1.322 5.836-1.247 2.289-2.614 3.665-4.1 4.129a1.76 1.76 0 01-1.663-.342l-.124-.114-.478-.48a1.36 1.36 0 01-.223-1.59l.071-.117.722-1.06c.283-.417.77-.614 1.237-.515l.127.035 1.332.444a5.08 5.08 0 001.33-1.519 4.797 4.797 0 00.596-1.59l.038-.27-1.109-1.052a1.354 1.354 0 01-.348-1.373l.047-.131.504-1.187-.504 1.187zM19.745 4a2.25 2.25 0 012.25 2.25l.001 3.979a2.821 2.821 0 00-.874-.562l-.2-.073-.427-.137V6.25a.75.75 0 00-.75-.75H4.25a.75.75 0 00-.75.75v11.505c0 .414.336.75.75.75l2.749-.001L7 15.75a1.75 1.75 0 011.606-1.744L8.75 14h6.495a1.75 1.75 0 011.744 1.606l.006.144-.001 1.222-.554-.185-.166-.048a2.152 2.152 0 00-.78-.048v-.941a.25.25 0 00-.192-.243l-.057-.007H8.75a.25.25 0 00-.243.193l-.007.057-.001 2.754h4.854l-.142.21-.098.156c-.2.352-.302.744-.307 1.134H4.25A2.25 2.25 0 012 17.755V6.25A2.25 2.25 0 014.25 4h15.495zM12 7a3 3 0 110 6 3 3 0 010-6zm0 1.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"/>
                    </g>
                </g>
            </svg>
        </div>
        <div class="window__body">
            <div class="scanlines"></div>
            <span class="record">
                <svg aria-hidden="true" focusable="false" width="55" height="24" viewBox="0 0 55 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18Z" />
                    <path d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM3.5 12C3.5 7.30558 7.30558 3.5 12 3.5C16.6944 3.5 20.5 7.30558 20.5 12C20.5 16.6944 16.6944 20.5 12 20.5C7.30558 20.5 3.5 16.6944 3.5 12Z" />
                    <text y="16" x="26">Rec</text>
                </svg>
            </span>

            <picture>
                @*<!--
                    Support: Performance - Lazyloading
                    Supporting Details: Chrome - https://addyosmani.com/blog/lazy-loading/ (See: `loading="lazy")
                    Supporting Details: IE - https://msdn.microsoft.com/en-us/vstudio/dn265036(v=vs.80) (See: lazyload="1")
                    Additional Details: https://github.com/scott-little/lazyload
                    Note: If cross-browser support for lazy-loading images is important: https://www.smashingmagazine.com/2019/05/hybrid-lazy-loading-progressive-migration-native/
                -->*@
                <source srcset="~/img/portrait.webp" type="image/webp" loading="lazy" lazyload="1">
                <source srcset="~/img/portrait.png" type="image/png" loading="lazy" lazyload="1">
                @*<!--
                    Support: Compatibility - HTML features: browsers that don't support <picture> (IE, Edge 12, etc)
                    Supporting Details: https://caniuse.com/#search=picture
                    Fix: Fallback to <img> if <picture> isn't supported.
                --> *@
                <!-- Note: Browsers with PNG support issues (See below) -->
                <!-- Additional Details: https://en.wikipedia.org/wiki/Portable_Network_Graphics#Web_browser_support_for_PNG -->
                <!-- Additional Details: https://en.wikipedia.org/wiki/Comparison_of_web_browsers#Image_format_support -->

                <!-- Support: WorldWideWeb(Browser) aka Nexus does not support PNG but does support Gif -->
                <!-- Note: Tested on https://worldwideweb.cern.ch/ - no image loaded, it is possible it doesn't support <img>.
                        Confirmed - https://remysharp.com/2019/02/12/cern-day-1#simulation -->

                <!-- Mosaic suggested creating the IMG element (https://thehistoryoftheweb.com/the-origin-of-the-img-tag/) -->
                <!-- TODO: Test Mosaic http://adrianroselli.com/2013/04/ncsa-moscaic-turns-20.html -->
                <img src="~/img/portrait.gif" alt="Portrait of Adrian D. Alvarez" loading="lazy" lazyload="1" width="96" height="96" />
            </picture>
        </div>
    </div>

    <div class="window">
        <div class="window__title">
            @ViewData["WindowTitle"]
        </div>
        <div class="window__body">
            <environment include="Development">
                <style>
                   /**
                    * Vertical Rhythm - https://codepen.io/MadeByMike/pen/bEEGvv
                    *
                    * Note: If the lines seem to glitch out ocasionally it's not because the vertical rhythm is broken.
                    *       The height of the gradient background that draws the lines on the body element is only rounded once,
                    *       whereas real line hight is rounded on a per element basis.
                    *
                    * Line-height should be unitless, but for the sake of getting the vertical rhythm somewhat accurate, the line-height
                    * will be set to match the line for the background line.
                    *
                    */
                    [id="content"] {
                        background-image: linear-gradient(rgba(200, 50, 50, .25) 1px, transparent 1px);
                        background-size: 1px calc(var(--font-size) * 1.5); /* 1.78125em; */
                        line-height: calc(var(--font-size) * 1.5); /* 1.1875em (font-size for main content) * 16px (html font-size) = 19px * 1.5 (line-height) = 28.5px / 16px (html font-size) = 1.78125 */
                    }
                </style>
            </environment>
            <div id="content">
                <main role="main">
                    @RenderBody()
                </main>

                <footer role="contentinfo">
                    &copy; 2009 &ndash; @DateTime.Now.Year.ToString() Adrian D. Alvarez, All rights reserved.
                </footer>
            </div>
        </div>
    </div>
<script src="~/js/modernizr.js"></script>
</body>
</html>